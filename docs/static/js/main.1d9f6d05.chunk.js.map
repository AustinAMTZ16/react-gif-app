{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","estableceCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","categorias","type","value","onChange","target","prototype","ProTypes","func","isRequired","GifGridItem","id","title","url","className","src","alt","getGifs","categoria","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,oBACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,mCACI,uBAAMC,SAVM,SAACC,GACjBA,EAAEC,iBACFC,QAAQC,IAAI,gBACTN,EAAWO,OAAOC,OAAS,IAC1BV,GAAoB,SAAAW,GAAU,OAAIT,GAAJ,mBAAmBS,OACjDR,EAAc,MAKd,UACI,0CAAaD,KACb,uBACIU,KAAK,OACLC,MAAQX,EACRY,SAnBS,SAACT,GACtBF,EAAcE,EAAEU,OAAOF,gBAyB/Bd,EAAYiB,UAAU,CAClBhB,oBAAqBiB,IAASC,KAAKC,Y,YC/B1BC,EAAc,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEpC,OACI,sBAAKC,UAAU,yCAAf,UACI,4BAAIH,IACJ,qBAAKI,IAAKF,EAAKG,IAAKJ,IAEpB,4BAAIA,Q,uBCRHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,8DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAYZY,GAZY,4CAAH,sDCIPK,EAAU,SAAC,GAAe,IAAdZ,EAAa,EAAbA,UAErB,ECHwB,SAACA,GACzB,MAAwB3B,mBAAS,CAC7BiC,KAAK,GACLO,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAnBAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACTT,KAAMY,EACNL,SAAQ,YAKrB,CAACb,IAQGc,EDtBwBM,CAAapB,GAAhCU,EAAZ,EAAOJ,KAAaO,EAApB,EAAoBA,QAQpB,OACI,qCACI,6BAAKb,IACJa,GAAW,mBAAGjB,UAAU,mCAAb,kCACZ,qBAAKA,UAAU,YAAf,SAEQc,EAAOF,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAGQA,GAFCA,EAAIhB,aEnBxB4B,EAAe,WACxB,MAA0ChD,mBAAS,CAAC,cAApD,mBAAOU,EAAP,KAAmBX,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,oBAAqBA,IAClC,uBACA,6BAEQW,EAAWyB,KAAI,SAAAR,GAAS,OACpB,cAAC,EAAD,CAEIA,UAAWA,GADNA,Y,MCXjCsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1d9f6d05.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport ProTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({estableceCategorias}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const hadleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const hadleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        console.log('Submit hecho');\r\n        if(inputValue.trim().length > 2){\r\n            estableceCategorias(categorias =>[inputValue, ...categorias]);\r\n            setInputValue('');\r\n        }        \r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={hadleSubmit}>\r\n                <h3>Buscar: {inputValue}</h3>\r\n                <input \r\n                    type=\"text\"\r\n                    value={ inputValue }\r\n                    onChange={hadleInputChange}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.prototype={\r\n    estableceCategorias: ProTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    //console.log({id, title, url});\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <p>{id}</p>\r\n            <img src={url} alt={title}/>\r\n            \r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async(categoria) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=5&api_key=spjSDfZC2wZFcN0xC9wDdinBDhMVzgF4`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({categoria})=>{\r\n    \r\n    const {data:images, loading} = useFetchGifs(categoria);\r\n    /*const [images, setImages] = useState([]);\r\n\r\n    useEffect( () => {\r\n        getGifs(categoria)\r\n            .then(setImages);\r\n    }, [categoria])*/\r\n\r\n    return(\r\n        <>\r\n            <h3>{categoria}</h3>  \r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando imagenes...</p>}\r\n            <div className=\"card-grid\">                  \r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            //img={img} \r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }            \r\n            </div>\r\n        </>        \r\n    )\r\n}","/**Hooks --> Son funciones */\r\nimport {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setState]=useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(categoria)\r\n            .then(imgs => {\r\n                setTimeout(()=>{\r\n                    setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                    });\r\n                });\r\n                \r\n            })\r\n    }, [categoria])\r\n\r\n    /*setTimeout(()=>{\r\n        setState({\r\n            data:[1,2,3,4,5],\r\n            loading: false\r\n        })\r\n    },3000);*/\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categorias, estableceCategorias] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory estableceCategorias={estableceCategorias}/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categorias.map(categoria => (\r\n                        <GifGrid \r\n                            key={categoria}\r\n                            categoria={categoria}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}